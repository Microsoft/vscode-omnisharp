name: Update Fork and Apply Patches

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      force_ci:
        description: 'Override failure condition to force CI workflow to run'
        required: false
        default: 'false'
  push:
    branches:
      - main

jobs:
  update-and-patch-fork:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout Fork
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

      - name: Add Upstream
        run: git remote add upstream https://github.com/dotnet/vscode-csharp.git

      - name: Fetch Upstream
        run: git fetch upstream

      - name: Check for Upstream Changes
        id: check-changes
        run: |
          UPSTREAM_COMMITS=$(git rev-list HEAD..upstream/main --count)
          echo "Upstream commits: $UPSTREAM_COMMITS"
          echo "::set-output name=upstream_commits::$UPSTREAM_COMMITS"

      - name: Check Last Run of OmniSharp-VSCode CI
        id: check-ci
        uses: actions/github-script@v6
        with:
          script: |
            const { data: workflows } = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const ciWorkflow = workflows.workflows.find(workflow => workflow.name === 'OmniSharp-VSCode CI');
            if (!ciWorkflow) {
              core.setFailed('OmniSharp-VSCode CI workflow not found');
              return;
            }

            const { data: workflowRuns } = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: ciWorkflow.id,
              per_page: 1,
              status: 'success'
            });

            if (workflowRuns.total_count > 0) {
              console.log('The last run of OmniSharp-VSCode CI succeeded');
              core.setOutput('ci_success', 'true');
            } else {
              console.log('The last run of OmniSharp-VSCode CI did not succeed');
              core.setOutput('ci_success', 'false');
            }

      - name: Set Override Failure Variable
        if: github.event_name == 'workflow_dispatch'
        run: echo "FORCE_CI=${{ github.event.inputs.force_ci }}" >> $GITHUB_ENV

      - name: Set Override Failure from Commit Message
        if: github.event_name == 'push'
        run: |
          if [[ "$(git log -1 --pretty=%B)" == *"[force-ci]"* ]]; then
            echo "FORCE_CI=true" >> $GITHUB_ENV
          else
            echo "FORCE_CI=false" >> $GITHUB_ENV
          fi

      - name: Fail if no upstream changes and CI succeeded
        if: steps.check-changes.outputs.upstream_commits == '0' && steps.check-ci.outputs.ci_success == 'true' && env.FORCE_CI != 'true'
        run: |
          echo "No changes in upstream repository and the last run of OmniSharp-VSCode CI succeeded. Failing the workflow."
          exit 1

      - name: Get current date (After Patch)
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %R')"

      - name: Checkout Upstream Changes
        run: |
          git checkout upstream/main -- .
          git reset HEAD .github/
          rm -rf .github/
          git add .
          git commit -m "[pre-patch] Update from upstream at ${{ steps.date.outputs.date }}"
          git push origin main

      - name: Apply Patches
        run: |
          if test -d _patches; then
            for patch in _patches/*.sh; do
              echo "Applying $patch"
              chmod +x "$patch"
              . "$patch"
            done
          fi

      - name: Commit & Push Changes
        run: |
          git add . && git commit -m "[post-patch] patching at ${{ steps.date.outputs.date }}" && git push origin main
