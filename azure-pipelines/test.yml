parameters:
  - name: jobName
    type: string
  - name: poolName
    type: string
  - name: demandsName
    type: string
    default: ''
  - name: vmImageName
    type: string
    default: ''

jobs:
- job: Test_${{ parameters.jobName }}
  displayName: 'Test ${{ parameters.jobName }}'
  pool:
    ${{ if ne(parameters.poolName, '') }}:
      name: ${{ parameters.poolName }}
    ${{ if ne(parameters.demandsName, '') }}:
      demands: ImageOverride -equals ${{ parameters.demandsName }}
    ${{ if ne(parameters.vmImageName, '') }}:
      vmImage: ${{ parameters.vmImageName }}
  steps:
  - checkout: self
    clean: true
    submodules: true
    fetchTags: false
    fetchDepth: 1

  - template: prereqs.yml

  - template: test-prereqs.yml

  - script: npm run test
    displayName: ðŸ§ª Run unit and integration tests
    env:
      DISPLAY: :99.0

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '*junit.xml'
      searchFolder: '$(Build.SourcesDirectory)/out'
      publishRunAttachments: true
      mergeTestResults: true
      testRunTitle: $(Agent.JobName) (Attempt $(System.JobAttempt))

  - task: PublishPipelineArtifact@1
    condition: failed()
    displayName: 'Upload integration test logs'
    inputs:
      targetPath: '$(Build.SourcesDirectory)/.vscode-test/user-data/logs'
      artifactName: 'VSCode Test Logs ($(Agent.JobName)-$(System.JobAttempt))'
