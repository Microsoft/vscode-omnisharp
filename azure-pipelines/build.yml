parameters:
- name: versionNumberOverride
  type: string
  default: 'default'
- name: platform
  type: string
- name: pool
  type: object
- name: isOfficial
  type: boolean

jobs:
- job: 'Build_${{ parameters.platform }}_vsixs'
  pool: ${{ parameters.pool }}
  displayName: 'Build ${{ parameters.platform }} vsixs'
  dependsOn: SetChannelVariable
  variables:
    channel: $[ dependencies.SetChannelVariable.outputs['passOutput.channel'] ]
  steps:
  - checkout: self
    clean: true
    submodules: true
    fetchTags: false
    fetchDepth: 0
  - template: /azure-pipelines/prereqs.yml@self
    parameters:
      versionNumberOverride: ${{ parameters.versionNumberOverride }}
  - pwsh: |
      Write-Host "Building VSIXs for platform ${{ parameters.platform }} and channel $(channel)"
      if ("$(channel)" -eq "Release") {
        gulp vsix:release:package:${{ parameters.platform }}
      } else {
        gulp vsix:release:package:${{ parameters.platform }} --prerelease
      }
    displayName: 'Build VSIXs'

  - ${{ if eq(parameters.isOfficial, true) }}:
    - task: 1ES.PublishBuildArtifacts@1
      condition: succeeded()
      displayName: 'Publish VSIXs'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/vsix'
        ArtifactName: 'VSIX_$(channel)'
  - ${{ else }}:
    - task: PublishBuildArtifacts@1
      condition: succeeded()
      displayName: 'Publish VSIXs'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/vsix'
        ArtifactName: 'VSIX_$(channel)'

  - script: npm run test:artifacts
    displayName: 'Run artifacts tests'