{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch Extension",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceRoot}"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Launch Current File slnWithCsproj Integration Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/lsp_tools_host_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/test/integrationTests",
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "TEST_FILE_FILTER": "${file}"
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/test/**/*.js"
            ],
            "resolveSourceMapLocations": [
                "${workspaceFolder}/**",
                "!**/node_modules/**"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Omnisharp: Launch Unit tests",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/out/omnisharptest/omnisharpUnitTests/**/*.test.js"
            ],
            "sourceMaps": true,
            "internalConsoleOptions": "openOnSessionStart",
            "outFiles": [
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "build"
        },
        {
            "name": "Omnisharp: Launch Feature Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpFeatureTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "featureTests",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "build"
        },
        {
            "name": "Omnisharp: Launch singleCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/singleCsproj/.vscode/omnisharp_singleCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "singleCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch razorcsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/BasicRazorApp2_1",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "BasicRazorApp2_1",
            },
        },
        {
            "name": "Omnisharp: Launch slnWithCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/omnisharp_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch singleCsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/singleCsproj/.vscode/omnisharp_lsp_singleCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "singleCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch razorcsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/BasicRazorApp2_1",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "BasicRazorApp2_1",
            },
        },
        {
            "name": "Omnisharp: Launch slnWithCsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/omnisharp_lsp_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch slnFilterWithCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnFilterWithCsproj",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnFilterWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch slnWithGenerator Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithGenerator",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithGenerator",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Update package dependencies",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
            "args": [
                "updatePackageDependencies"
            ],
            "env": {
                "NEW_DEPS_URLS": "https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x86-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-arm64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x86-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-arm64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-musl-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-musl-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x86-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-arm64-net6.0-1.39.7.zip",
                "NEW_DEPS_VERSION": "1.39.7"
            },
            "cwd": "${workspaceFolder}"
        },
        {
          "type": "node",
          "request": "launch",
          "name": "Update razor package dependencies",
          "preLaunchTask": "build",
          "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
          "args": [
              "updatePackageDependencies"
          ],
          "env": {
              "NEW_DEPS_URLS": "https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/7a4d697a06da6cb992c591b44fccfb11/razorlanguageserver-linux-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/1fa089d63cde8d21ec9ca873b1948bb0/razorlanguageserver-linux-musl-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/a8d0a6bc9b1c4e6f1e8ed349e302e9fd/razorlanguageserver-linux-musl-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/67c53310d6c7b4e729880fd94ccce9ab/razorlanguageserver-linux-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/a158413d1af07f98d7f753775848978a/razorlanguageserver-osx-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/cfb24346501d78bc55d0b7521c7e62cb/razorlanguageserver-osx-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/24717a2d1651eb44995e788cad626864/razorlanguageserver-win-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/fa09591c372229aedafd03203799c783/razorlanguageserver-win-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/ed87299705f127a3dbde56397318860d/razorlanguageserver-win-x86-7.0.0-preview.23464.2.zip",
              "NEW_DEPS_VERSION": "7.0.0-preview.23464.2",
              "NEW_DEPS_ID": "Razor"
          },
          "cwd": "${workspaceFolder}"
      },
      {
        "type": "node",
        "request": "launch",
        "name": "Update razor telemetry package dependencies",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
        "args": [
            "updatePackageDependencies"
        ],
        "env": {
            "NEW_DEPS_URLS": "https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/b1d886489eaa8a1cd78be5a02e8007b8/devkittelemetry-linux-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/3eeff69503341ad4323ed465b89294e2/devkittelemetry-linux-musl-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/7a7629d7eafaf5a2cdd94030ddf667a7/devkittelemetry-linux-musl-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/d772b9c8e10eccd8ed178872e2338d38/devkittelemetry-linux-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/4714f6220baeedddd128b9fc592c1df6/devkittelemetry-osx-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/7b62db776508e8a386fdf6106dac6af7/devkittelemetry-osx-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/cfe334cfe2f27d3b7d3aec2f8c30b258/devkittelemetry-win-arm64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/9b063176e8add94d576242062a3a40ab/devkittelemetry-win-x64-7.0.0-preview.23464.2.zip,https://download.visualstudio.microsoft.com/download/pr/d65d9f27-9718-4708-888e-caf62d6f0b72/32cc73606809486f3901840b48d3ce1a/devkittelemetry-win-x86-7.0.0-preview.23464.2.zip",
            "NEW_DEPS_VERSION": "7.0.0-preview.23464.2",
            "NEW_DEPS_ID": "RazorTelemetry"
        },
        "cwd": "${workspaceFolder}"
    },
    {
        "type": "node",
        "request": "launch",
        "name": "Generate debugger options schema",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
        "args": [
            "generateOptionsSchema"
        ],
        "cwd": "${workspaceFolder}"
    }
    ]
}
