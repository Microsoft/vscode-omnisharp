{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch Extension",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                "--extensionDevelopmentPath=${workspaceRoot}"
            ],
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Launch Current File slnWithCsproj Integration Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/lsp_tools_host_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/test/integrationTests",
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "TEST_FILE_FILTER": "${file}"
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/test/**/*.js"
            ],
            "resolveSourceMapLocations": [
                "${workspaceFolder}/**",
                "!**/node_modules/**"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Omnisharp: Launch Unit tests",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/out/omnisharptest/omnisharpUnitTests/**/*.test.js"
            ],
            "sourceMaps": true,
            "internalConsoleOptions": "openOnSessionStart",
            "outFiles": [
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "build"
        },
        {
            "name": "Omnisharp: Launch Feature Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpFeatureTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "featureTests",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "build"
        },
        {
            "name": "Omnisharp: Launch singleCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/singleCsproj/.vscode/omnisharp_singleCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "singleCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch razorcsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/BasicRazorApp2_1",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "BasicRazorApp2_1",
            },
        },
        {
            "name": "Omnisharp: Launch slnWithCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/omnisharp_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch singleCsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/singleCsproj/.vscode/omnisharp_lsp_singleCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "singleCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch razorcsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/BasicRazorApp2_1",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "BasicRazorApp2_1",
            },
        },
        {
            "name": "Omnisharp: Launch slnWithCsproj Workspace Tests [LSP]",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithCsproj/.vscode/omnisharp_lsp_slnWithCsproj.code-workspace",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch slnFilterWithCsproj Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnFilterWithCsproj",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnFilterWithCsproj",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "name": "Omnisharp: Launch slnWithGenerator Workspace Tests",
            "type": "extensionHost",
            "request": "launch",
            "runtimeExecutable": "${execPath}",
            "args": [
                // Create a temp profile that has no extensions / user settings.
                // This allows us to only have the C# extension + the dotnet runtime installer extension dependency.
                "--profile-temp",
                "${workspaceRoot}/test/integrationTests/testAssets/slnWithGenerator",
                "--extensionDevelopmentPath=${workspaceRoot}",
                "--extensionTestsPath=${workspaceRoot}/out/omnisharptest/omnisharpIntegrationTests"
            ],
            "env": {
                "CODE_EXTENSIONS_PATH": "${workspaceRoot}",
                "OSVC_SUITE": "slnWithGenerator",
            },
            "sourceMaps": true,
            "outFiles": [
                "${workspaceRoot}/dist/*.js",
                "${workspaceRoot}/out/omnisharptest/**/*.js"
            ],
            "preLaunchTask": "buildDev"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Update package dependencies",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
            "args": [
                "updatePackageDependencies"
            ],
            "env": {
                "NEW_DEPS_URLS": "https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x86-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-arm64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x86-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-arm64-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-musl-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-musl-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-linux-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-osx-arm64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x64-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-x86-net6.0-1.39.7.zip,https://roslynomnisharp.blob.core.windows.net/releases/1.39.7/omnisharp-win-arm64-net6.0-1.39.7.zip",
                "NEW_DEPS_VERSION": "1.39.7"
            },
            "cwd": "${workspaceFolder}"
        },
        {
          "type": "node",
          "request": "launch",
          "name": "Update razor package dependencies",
          "preLaunchTask": "build",
          "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
          "args": [
              "updatePackageDependencies"
          ],
          "env": {
              "NEW_DEPS_URLS": "https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/1f7ca88955dd8ee28a016c7b699de1a8/razorlanguageserver-linux-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/e2b17d54dfea4ce7a1ebc3e20f93e006/razorlanguageserver-linux-musl-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/1a9c9111b37d3254d1c6edbdb62fa382/razorlanguageserver-linux-musl-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/8df1db725708594806369c7e8a547a02/razorlanguageserver-linux-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/f6cfc265a4e01a4bc6e493abdeab3e4c/razorlanguageserver-osx-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/34134fce2a63158bcf5b7e8c3813289a/razorlanguageserver-osx-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/4534001b203012f51e0bd897c16dd414/razorlanguageserver-win-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/0156660d3533efef9a0563a6c95686d9/razorlanguageserver-win-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/43aae1d74406b86393bd98af202e4b73/razorlanguageserver-win-x86-7.0.0-preview.23472.3.zip",
              "NEW_DEPS_VERSION": "7.0.0-preview.23472.3",
              "NEW_DEPS_ID": "Razor"
          },
          "cwd": "${workspaceFolder}"
      },
      {
        "type": "node",
        "request": "launch",
        "name": "Update razor telemetry package dependencies",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
        "args": [
            "updatePackageDependencies"
        ],
        "env": {
            "NEW_DEPS_URLS": "https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/008191bf243e1dd102a0627e3242fc66/devkittelemetry-linux-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/a347264ccae9c38677e359659f6124ad/devkittelemetry-linux-musl-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/5309c20ceb995ef7649d07e8814a9f75/devkittelemetry-linux-musl-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/faf87c17729b1677c822d5a6ef3e39c7/devkittelemetry-linux-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/3297feafe2e604742f5c5d8864444941/devkittelemetry-osx-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/f74c5297dbe0a96ab3a43def2dda1a63/devkittelemetry-osx-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/092f8e423a04948ae2c66678e948c7ad/devkittelemetry-win-arm64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/f47ecd4e96606355e87804b1c21e4c69/devkittelemetry-win-x64-7.0.0-preview.23472.3.zip,https://download.visualstudio.microsoft.com/download/pr/e0c516ea-aa15-448e-8fee-a2f27785ee9e/87a29ddab008eb63b49e115525873c84/devkittelemetry-win-x86-7.0.0-preview.23472.3.zip",
            "NEW_DEPS_VERSION": "7.0.0-preview.23472.3",
            "NEW_DEPS_ID": "RazorTelemetry"
        },
        "cwd": "${workspaceFolder}"
    },
    {
        "type": "node",
        "request": "launch",
        "name": "Generate debugger options schema",
        "preLaunchTask": "build",
        "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
        "args": [
            "generateOptionsSchema"
        ],
        "cwd": "${workspaceFolder}"
    }
    ]
}
